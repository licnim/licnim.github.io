[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "What’s in a (user)name?",
    "section": "",
    "text": "The key metric for an idol’s success is most often thought to be their fame. Where Instagram has become a hotspot for K-pop idols to communicate with fans, show off their brand sponsorships. and express themselves, follower counts have also become a quick way to quantify idols’ fame, and give an estimate of their popularity.\nBut, how exactly do idols gain followers through their profiles?\nMy question is as such: What is the optimal Instagram profile for a K-pop idol to achieve the most number of followers?\nArguably, the most important part of an Instagram profile is the username.\nThe maximum length of an Instagram username is 30 characters, within which one has the flexibility to put any letters, digits, and combinations of underscores and periods.\nI want to study how K-pop idols have made use of these restrictions to create their usernames, and from that, how the designs of their usernames might have affected their follower counts, alongside the influence of external factors, like gender, age, and years in the industry.\nI will ultimately deduce what characteristics are more likely to attract higher numbers of followers, and create a web app that lets one create a fake idol profile and generate an predicted amount of followers.\nThe dataset I will be using is “Kpop Idol Instagram Followers” retrieved from: Faisal Amir on Kaggle\nLet us first examine our independent variable, the number of followers, before exploring the dependent variables:\nAs observed, we have a relatively small sample size in comparison to the large range of followers. For ease of visuals while plotting graphs and because comparisons of number of followers, rather than their individual counts, are more important in my analysis, much of my graphs will be on the logarithmic log2 scale without numbered axes.\nNow, moving on the dependent variables, I have elected to split them into two categories: username-based or idol-based."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, I’m Nic, a Year 1 student majoring in CNM.\nHere is a picture of a cat I drew:"
  },
  {
    "objectID": "generator.html",
    "href": "generator.html",
    "title": "Shiny in Quarto",
    "section": "",
    "text": "radioButtons(\n  inputId = \"radio_input\",\n  label = \"Are you a cat person or a dog person?\",\n  choices = c(\n    \"Cat person\",\n    \"Dog person\",\n    \"Don't make me choose!\",\n    \"Neither :(\"\n  ),\n  selected = \"Don't make me choose!\"\n)\n\n\nAre you a cat person or a dog person?\n\n\n\n\nCat person\n\n\n\n\n\nDog person\n\n\n\n\n\nDon't make me choose!\n\n\n\n\n\nNeither :("
  },
  {
    "objectID": "generator.html#input-widget",
    "href": "generator.html#input-widget",
    "title": "Shiny in Quarto",
    "section": "",
    "text": "radioButtons(\n  inputId = \"radio_input\",\n  label = \"Are you a cat person or a dog person?\",\n  choices = c(\n    \"Cat person\",\n    \"Dog person\",\n    \"Don't make me choose!\",\n    \"Neither :(\"\n  ),\n  selected = \"Don't make me choose!\"\n)\n\n\nAre you a cat person or a dog person?\n\n\n\n\nCat person\n\n\n\n\n\nDog person\n\n\n\n\n\nDon't make me choose!\n\n\n\n\n\nNeither :("
  },
  {
    "objectID": "generator.html#widget-value",
    "href": "generator.html#widget-value",
    "title": "Shiny in Quarto",
    "section": "Widget value",
    "text": "Widget value\n\nverbatimTextOutput(\"radio_output\")"
  },
  {
    "objectID": "w1w9.html",
    "href": "w1w9.html",
    "title": "licnim.github.io",
    "section": "",
    "text": "As linked here."
  },
  {
    "objectID": "about.html#self-introduction",
    "href": "about.html#self-introduction",
    "title": "About",
    "section": "",
    "text": "Hello, I’m Nic, a Year 1 student majoring in CNM.\nHere is a picture of a cat I drew:"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "What’s in a (user)name?",
    "section": "",
    "text": "The key metric for an idol’s success is most often thought to be their fame. Where Instagram has become a hotspot for K-pop idols to communicate with fans, show off their brand sponsorships. and express themselves, follower counts have also become a quick way to quantify idols’ fame, and give an estimate of their popularity.\nBut, how exactly do idols gain followers through their profiles?\nMy question is as such: What is the optimal Instagram profile for a K-pop idol to achieve the most number of followers?\nArguably, the most important part of an Instagram profile is the username.\nThe maximum length of an Instagram username is 30 characters, within which one has the flexibility to put any letters, digits, and combinations of underscores and periods.\nI want to study how K-pop idols have made use of these restrictions to create their usernames, and from that, how the designs of their usernames might have affected their follower counts, alongside the influence of external factors, like gender, age, and years in the industry.\nI will ultimately deduce what characteristics are more likely to attract higher numbers of followers, and create a web app that lets one create a fake idol profile and generate an predicted amount of followers.\n\nDataset used\n“Kpop Idol Instagram Followers” retrieved from: Faisal Amir on Kaggle\nLet us first examine our independent variable, the number of followers, before exploring the dependent variables:\n\n\n\n\n\nAs observed, we have a relatively small sample size in comparison to the large range of followers. For ease of visuals while plotting graphs and because comparisons of number of followers, rather than their individual counts, are more important in my analysis, much of my graphs will be on the logarithmic log2 scale.\nNow, moving on the dependent variables, I have elected to split them into two categories: username-based or idol-based.\n\n\nUsername-based (Characteristics of a username):\n\nLength (in characters)\nPresence of and number of special symbols (periods (“.”), underscores(“_”), or both)\nPresence of and number of digits\nVerification-related words: “official”\nIdentity-related words: inclusion of group name or stage name\n\n\n\nIdol-based (Personal characteristics):\n\nGender\nAge\nCareer length (in years)\nNationality\nCompany reputation\n\n\n\nOptimising a Username\nAn easy differentiating factor between\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Project Page\"&gt;Project Page&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/project.html\"&gt;/project.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Week 1 to 9\"&gt;Week 1 to 9&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/w1w9.html\"&gt;/w1w9.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Bored?\"&gt;Bored?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/fun.html\"&gt;/fun.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;A two-part analysis of k-pop idols’ Instagram follower counts and a derivative interactive app.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;A two-part analysis of k-pop idols’ Instagram follower counts and a derivative interactive app.&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "index.html#self-introduction",
    "href": "index.html#self-introduction",
    "title": "About",
    "section": "",
    "text": "Hello, I’m Nic, a Year 1 student majoring in CNM.\nHere is a picture of a cat I drew:"
  },
  {
    "objectID": "index.html#the-perfect-idol",
    "href": "index.html#the-perfect-idol",
    "title": "What’s in a (user)name?",
    "section": "The Perfect Idol",
    "text": "The Perfect Idol\nWe hence move on to analysing other characteristics to find out which ones translate to the most Instagram fame.\n\nGender\n\n\n\n\n\nDespite there being less male idols on Instagram, they have much higher median numbers of followers. This follows overall industry trends where fans of male artists generally outnumber female artists’, and male groups attain higher sales figures, whether in albums, concert tickets, or merchandise (Dong, 2020).\n\n\nAge and Seniority\n\n\n\n\n\nThe K-pop industry, having been steadily growing since its beginning in 1992, now has musicians across a wide age range (Romano, 2018). Although the few idols with the most followers overall are generally in the middle of the age range, the saturation in that age range with many more idols with much lower follower counts mean that generally, the oldest idols are still more likely to have more followers.\n\n\n\n\n\nIndeed, a similar trend can be observed between follower counts and seniority as an idol, where the longer the average idol has been active in the industry, the higher their follower counts.\nInterestingly, a high point and dip can be observed consecutively between from 0 to 3 years of seniority. This can be attributed to the impact of the COVID-19 pandemic on the industry, where a slump severely impacted and postponed most idols’ debuts (Jeon, 2022). Subsequently, these long-awaited debuts were made around the same time in 2022 and received much greater attention, represented in their high numbers of followers.\n\n\nNationality\n\n\n\n\n\nPeople also come from a diversity of locations to South Korea seek a career in their booming music industry. While South Korean idols are the majority, their foreign counterparts may stand out more precisely because they are a minority; their multilingual statuses as global idols garner them significantly more followers, especially those from their home countries, than the average South Korean idol.\n\n\nCompany\n\nThe Big 4Within the Big 4\n\n\n\n\n\n\n\nThe final, and perhaps one of the most decisive factors in an idol’s fame online and offline, is their company. The Big 3 hierarchy, composed of SM Entertainment, YG Entertainment, and JYP Entertainment, are prestigious companies whose long legacies producing idols from the earliest generations of K-pop (Lee, 2010). This guarantees their newest groups as much, or even more, success as their seniors. However, Kang (2018) notes the meteoric rise of a fourth player: Big Hit Entertainment, home to BTS, unsettling the traditional ranking of companies. I have hence included them into this order of notable companies to form a “Big 4”.\nThe gap between the “Big 4” and other companies has been demonstrated in the plot, where the small number of idols belonging to the biggest companies enjoy much greater levels of support on Instagram through larger followings.\n\n\n\n\n\n\n\nThe plot of follower counts against their companies within the Big 4 reflects the rise of Big Hit Entertainment, as small as they are in size, as a disruptive force to the industry. It places the company and future debuts from them in good stead, considering the future of K-pop where wide social media presences are becoming as necessary as perfect stage performances."
  },
  {
    "objectID": "index.html#interactive-web-app",
    "href": "index.html#interactive-web-app",
    "title": "What’s in a (user)name?",
    "section": "Interactive Web App",
    "text": "Interactive Web App\n\n&lt;section id=\"bibliography\" class=\"level4\"&gt;\n&lt;h4&gt;Bibliography&lt;/h4&gt;\n&lt;p&gt;Dong, S. (2020, September 26). Do K-pop boy bands outperform girl groups? &lt;em&gt;The Korea Times&lt;/em&gt;. https://www.koreatimes.co.kr/www/art/2023/11/732_289674.html&lt;/p&gt;\n&lt;p&gt;Jeon, Y. (2022, June 1). SM출신이 만든 하이브 여돌, 남미 겨냥한 CJ 보이그룹…몰려오는 대기업 ‘신인 아이돌’. &lt;em&gt;Joongang Daily&lt;/em&gt;. https://www.joongang.co.kr/article/25075858&lt;/p&gt;\n&lt;p&gt;Kang, H. (2018, January 11). Rise of K-pop—Comparable to 1960s ‘British Invasion’? &lt;em&gt;The Korea Times&lt;/em&gt;. https://www.koreatimes.co.kr/www/art/2023/11/398_242315.html&lt;/p&gt;\n&lt;p&gt;Lee, D. (2010, December 28). 3大 기획사 ‘전성시대’… 내년에도 계속될까. &lt;em&gt;Munhwa Ilbo&lt;/em&gt;. https://www.munhwa.com/news/view.html?no=20101228010325303020070&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Project Page\"&gt;Project Page&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/index.html\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:About Me\"&gt;About Me&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/about.html\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Week 1 to 13\"&gt;Week 1 to 13&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/w1w9.html\"&gt;/w1w9.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:Bored?\"&gt;Bored?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/fun.html\"&gt;/fun.html&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;licnim.github.io - What’s in a (user)name?&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;licnim.github.io&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;A two-part analysis of K-pop idols’ Instagram follower counts and a derivative interactive app.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;A two-part analysis of K-pop idols’ Instagram follower counts and a derivative interactive app.&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  }
]